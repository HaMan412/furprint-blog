---
// 文件路径: src/pages/blog/page/[page].astro

import type { Post, Page } from "@interfaces/data";
import PostCard from "@components/PostCard.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import Pagination from "@components/widgets/Pagination.astro";
import CardGroup from "@components/temple/CardGroup.astro";
import { Icon } from "astro-icon/components";
import { t } from "@config";
import { generatePageLinks } from "@utils/blogUtils";
import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPostsRaw = await getCollection("blog");

  const allPostsWithStats = await Promise.all(
    allPostsRaw.map(async (blog) => {
      const { remarkPluginFrontmatter } = await blog.render();
      return {
        ...blog,
        remarkPluginFrontmatter,
      };
    })
  );

  // 按日期倒序排序，确保文章顺序正确
  const sortedPosts = allPostsWithStats.sort(
    (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
  );

  return paginate(sortedPosts, { pageSize: 10 });
}

const { page }: { page: Page } = Astro.props;

const totalPages = Math.ceil(page.total / page.size);
const pageLinks = generatePageLinks(totalPages);
---

<BaseLayout title="Blog">
  <!-- Blog Navigation Cards (保持不变) -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <a href="/blog/archives" class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1">
      <div class="card-body p-4"><div class="flex items-center gap-3"><div class="rounded-full bg-accent/10 p-3"><Icon name="lucide:archive" class="w-6 h-6 text-accent" /></div><div><h2 class="card-title text-lg">{t("label.archivePage")}</h2><p class="text-sm opacity-75">{t("label.archivesPageDescription")}</p></div></div></div>
    </a>
    <a href="/blog/categories" class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1">
      <div class="card-body p-4"><div class="flex items-center gap-3"><div class="rounded-full bg-primary/10 p-3"><Icon name="lucide:folder" class="w-6 h-6 text-primary" /></div><div><h2 class="card-title text-lg">{t("label.categoryPage")}</h2><p class="text-sm opacity-75">{t("label.categoriesPageDescription")}</p></div></div></div>
    </a>
    <a href="/blog/tags" class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1">
      <div class="card-body p-4"><div class="flex items-center gap-3"><div class="rounded-full bg-secondary/10 p-3"><Icon name="lucide:tag" class="w-6 h-6 text-secondary" /></div><div><h2 class="card-title text-lg">{t("label.tagPage")}</h2><p class="text-sm opacity-75">{t("label.tagsPageDescription")}</p></div></div></div>
    </a>
    <a href="/blog/search" class="card bg-base-100 shadow-lg hover:shadow-xl transition-transform duration-300 ease-in-out hover:-translate-y-1">
      <div class="card-body p-4"><div class="flex items-center gap-3"><div class="rounded-full bg-info/10 p-3"><Icon name="lucide:search" class="w-6 h-6 text-info" /></div><div><h2 class="card-title text-lg">{t("label.searchPage")}</h2><p class="text-sm opacity-75">{t("label.searchPageDescription")}</p></div></div></div>
    </a>
  </div>

  <!-- Blog Post List -->
  <CardGroup cols="1" gap="6">
    {
      page.data.map((blog: Post) => (
        <PostCard
          title={blog.data.title}
          image={blog.data.image}
          description={blog.data.description}
          url={"/blog/" + blog.slug}
          pubDate={blog.data.pubDate}
          badge={blog.data.badge}
          categories={blog.data.categories}
          tags={blog.data.tags}
          word={blog.remarkPluginFrontmatter.totalCharCount}
          time={blog.remarkPluginFrontmatter.readingTime}
        />
      ))
    }
  </CardGroup>
  {/* 修改点：更新 baseUrl 以匹配新的路由结构 */}
  <Pagination page={page} totalPages={totalPages} pageLinks={pageLinks} baseUrl={`/blog/page`} />
</BaseLayout>
