---
import BaseLayout from "@layouts/BaseLayout.astro";
import BaseCard from "@components/BaseCard.astro";
import { t } from "@config";
import { Icon } from "astro-icon/components";
---

<BaseLayout title={t("label.searchPage")}>
  <BaseCard title={t("label.searchPage")}>
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
      <div class="flex items-center gap-2">
        <Icon name="lucide:search" class="w-6 h-6 text-info" />
        <h1 id="h1" class="text-2xl md:text-3xl font-bold">{t("label.searchPage")}</h1>
      </div>
      <a href="/blog" class="btn btn-outline btn-sm gap-2">
        <Icon name="lucide:book-open" class="w-4 h-4" />
        <span>{t("label.backToBlog")}</span>
      </a>
    </div>
    <div class="divider my-2"></div>
    <p class="text-sm opacity-75">{t("label.searchPageDescription")}</p>
  </BaseCard>

  <BaseCard>
    <div id="search-container" class="w-full">
      <div id="pagefind-search"></div>
    </div>
  </BaseCard>
</BaseLayout>

<script>
  document.addEventListener("astro:page-load", initSearch);

  function initSearch() {
    const pageFindSearch = document.querySelector("#pagefind-search");
    if (!pageFindSearch) return;

    const params = new URLSearchParams(window.location.search);
    const onIdle = window.requestIdleCallback || ((cb) => setTimeout(cb, 1));

    onIdle(async () => {
      try {
        const { PagefindUI } = await import("@pagefind/default-ui");

        const search = new PagefindUI({
          element: "#pagefind-search",
          bundlePath: "/pagefind/",
          showImages: false,
          // 【修复】告诉 TypeScript，term 是一个字符串 (string)
          processTerm: function (term: string) {
            params.set("q", term);
            history.replaceState(history.state, "", "?" + params.toString());
            return term;
          },
        });

        const query = params.get("q");
        if (query) {
          search.triggerSearch(query);
        }

        const searchInput = document.querySelector(".pagefind-ui__search-input");
        const clearButton = document.querySelector(".pagefind-ui__search-clear");

        // 【修复】告诉 TypeScript，e 是一个事件 (Event)，并且它的 target 是一个 HTMLInputElement
        const resetSearchParam = (e: Event) => {
          const target = e.target as HTMLInputElement;
          if (target && target.value === "") {
            history.replaceState(history.state, "", window.location.pathname);
          }
        };

        searchInput?.addEventListener("input", resetSearchParam);
        clearButton?.addEventListener("click", resetSearchParam);

      } catch (error) {
        console.error("Error initializing search:", error);
        const searchContainer = document.querySelector("#search-container");
        if (searchContainer) {
          searchContainer.innerHTML = `
            <div class="alert alert-error shadow-lg">
              <div>
                <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2 2m2-2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>
                <span>Error loading search functionality. Please try again later.</span>
              </div>
            </div>
          `;
        }
      }
    });
  }
</script>

<style>
  html[data-theme-type="light"] mark {
    background-color: #FFF0F5;
    color: #4a5568;
    padding: 0.1em 0.4em;
    border-radius: 0.375rem;
  }
</style>
