---
import BaseLayout from "@/layouts/BaseLayout.astro";
import MainCard from "@/components/MainCard.astro";
// 导入我们刚刚创建的播放器组件
import MusicPlayer from "@/components/MusicPlayer.jsx";

const songs = [
  { title: "Signals", artist: "Lazer Boomerang", cover: "https://vip.123pan.cn/1815727707/ymjew503t0l000d7w32x8raj9w2103y4DIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Signals.mp3" },
  { title: "Vortex", artist: "SaliHai", cover: "https://vip.123pan.cn/1815727707/yk6baz03t0m000d7w33g8y2s5gg9bi1wDIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Vortex.mp3" },
  { title: "Speed of flow", artist: "THE RODEO CARBURETTOR", cover: "https://vip.123pan.cn/1815727707/ymjew503t0l000d7w32x8rak5m230enxDIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Speed of flow.mp3" },
  { title: "His Theme", artist: "Toby Fox", cover: "https://vip.123pan.cn/1815727707/yk6baz03t0l000d7w33ff4yvsjn00yb3DIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/His Theme.mp3" },
  { title: "Secret Link (和泉紗霧角色歌)", artist: "藤田茜", cover: "https://vip.123pan.cn/1815727707/ymjew503t0l000d7w32x8raklc240qibDIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Secret Link (和泉紗霧角色歌).mp3" },
  { title: "Sincerely", artist: "TRUE - 唐沢美帆", cover: "https://vip.123pan.cn/1815727707/yk6baz03t0m000d7w33g8y2uuxg9e6a1DIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Sincerely.mp3" },
  { title: "Whatever It Takes", artist: "Imagine Dragons", cover: "https://vip.123pan.cn/1815727707/yk6baz03t0n000d7w33h1aornrvvryuhDIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/Whatever It Takes.mp3" },
  { title: "D.T.M.", artist: "Simon Curtis", cover: "https://vip.123pan.cn/1815727707/yk6baz03t0l000d7w33ff4ywmrn10rgiDIYPAIUvAwUOAvxvAdrxAa==.png", url: "https://maomaowo.cn/D.T.M..mp3" },
];
---

<BaseLayout title="哈曼の歌单">
  <MainCard
    title="哈曼の歌单"
    description="愿世间一切归于宁静"
    image="https://vip.123pan.cn/1815727707/yk6baz03t0n000d7w33h1aoqtpvvqz9gDIYPAIUvAwUOAvxvAdrxAa==.png"
    infoIcon="lucide:music"
  >
    <!-- 
      直接使用我们的组件，并把歌曲数据传进去 
      client:load 指令告诉 Astro 立即加载并运行这个组件的 JS
    -->
    <MusicPlayer songs={songs} client:load />
  </MainCard>
</BaseLayout>

<style is:global>
  /* 
    播放器主体样式 - 毛玻璃效果 
  */
  .rhap_container {
    border-radius: 12px !important;
    margin-bottom: 24px !important;
    background: rgba(255, 255, 255, 0.1) !important;
    backdrop-filter: blur(10px) !important;
    -webkit-backdrop-filter: blur(10px) !important;
    border: 1px solid rgba(255, 255, 255, 0.18) !important;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1) !important;
    padding: 15px !important;
  }

  /* 
    =====================================================
    【关键】进度条美化 - 樱花图标定位点
    =====================================================
  */

  /* 进度条轨道、缓冲和已播放部分保持不变 */
  .rhap_progress-bar { background-color: rgba(255, 255, 255, 0.2) !important; height: 4px !important; border-radius: 2px; }
  .rhap_download-progress { background: rgba(255, 255, 255, 0.35) !important; height: 4px !important; border-radius: 2px; }
  .rhap_progress-filled { background-color: #ff85a1 !important; height: 4px !important; border-radius: 2px; }

  /* 
    【修改 1】进度条拖动点 -> 替换为精致的樱花图标！
  */
  .rhap_progress-indicator {
    /* 移除原来的样式 */
    background: transparent !important; 
    box-shadow: none !important;
    
    /* 设置尺寸 */
    width: 24px !important;
    height: 24px !important;
    
    /* 
      使用精心挑选的单色樱花 SVG 图标，并用 URL 编码嵌入
      fill='%23ff85a1' 就是设置图标颜色为樱花粉
    */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23ff85a1'%3E%3Cpath d='M12.86,3.23c-0.85-0.42-1.87-0.42-2.72,0C9.29,3.65,8.88,4.53,9.1,5.43c0.04,0.17,0.1,0.33,0.18,0.49 C8.21,6.3,7.2,6.1,6.18,6.18C5.28,6.26,4.4,6.67,3.98,7.52c-0.42,0.85-0.42,1.87,0,2.72c0.42,0.85,1.3,1.26,2.2,1.18 c0.36-0.03,0.7-0.13,1.02-0.29c0.3,0.53,0.68,1,1.12,1.41c-0.16,0.32-0.26,0.66-0.29,1.02c-0.08,0.9,0.33,1.78,1.18,2.2 c0.85,0.42,1.87,0.42,2.72,0c0.85-0.42,1.26-1.3,1.18-2.2c-0.03-0.36-0.13-0.7-0.29-1.02c0.53-0.3,1-0.68,1.41-1.12 c0.32,0.16,0.66,0.26,1.02,0.29c0.9,0.08,1.78-0.33,2.2-1.18c0.42-0.85,0.42-1.87,0-2.72c-0.42-0.85-1.3-1.26-2.2-1.18 c-0.36,0.03-0.7,0.13-1.02,0.29c-0.3-0.53-0.68-1-1.12-1.41c0.16-0.32,0.26-0.66,0.29-1.02C15.12,4.53,14.71,3.65,13.86,3.23z M12,10 c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S13.1,10,12,10z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;
    
    /* 垂直居中对齐 */
    top: 50% !important;
    transform: translateY(-50%);
  }

  /* 
    =====================================================
    其他 UI 元素美化
    =====================================================
  */
  .rhap_container svg { color: #ff85a1 !important; filter: drop-shadow(0 0 3px rgba(255, 133, 161, 0.5)); }
  .rhap_container .rhap_time, .rhap_container .rhap_current-time, .rhap_container .rhap_total-time, .rhap_container .rhap_header { color: var(--theme-text) !important; font-size: 0.95rem; }
  .rhap_volume-bar { background-color: rgba(255, 255, 255, 0.2) !important; }
  .rhap_volume-indicator { background: #ff85a1 !important; }

  /* 
    =====================================================
    歌曲列表样式
    =====================================================
  */
  .playlist { display: flex; flex-direction: column; gap: 8px; }
  .song-item { display: flex; align-items: center; padding: 12px; border-radius: 12px; cursor: pointer; transition: background-color 0.3s ease; background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); border: 1px solid rgba(255, 255, 255, 0.18); box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); text-decoration: none; }
  
  /* 
    【修改 2】移除左侧边框，只保留背景高亮
  */
  .song-item.playing { 
    background: rgba(255, 133, 161, 0.25); 
  }
  .song-item:hover { 
    background: rgba(255, 255, 255, 0.25); 
  }
  
  .song-index { font-size: 1rem; font-weight: 500; color: var(--theme-text-2); width: 30px; text-align: center; flex-shrink: 0; }
  .song-cover { width: 48px; height: 48px; border-radius: 8px; margin: 0 16px; object-fit: cover; flex-shrink: 0; }
  .song-info { flex-grow: 1; overflow: hidden; }
  .song-title { font-size: 1.1rem; font-weight: 600; color: var(--theme-text); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
  .song-artist { font-size: 0.9rem; color: var(--theme-text-2); white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }

  /* 
    【修改 3】为正在播放的歌曲标题后添加樱花图标
  */
  .song-item.playing .song-title::after {
    content: ''; /* 必须有 content 属性，伪元素才会显示 */
    display: inline-block;
    width: 16px;  /* 图标尺寸 */
    height: 16px;
    margin-left: 8px; /* 与文字的间距 */
    vertical-align: middle; /* 垂直居中对齐 */
    
    /* 使用与进度条定位点相同的樱花图标 */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23ff85a1'%3E%3Cpath d='M12.86,3.23c-0.85-0.42-1.87-0.42-2.72,0C9.29,3.65,8.88,4.53,9.1,5.43c0.04,0.17,0.1,0.33,0.18,0.49 C8.21,6.3,7.2,6.1,6.18,6.18C5.28,6.26,4.4,6.67,3.98,7.52c-0.42,0.85-0.42,1.87,0,2.72c0.42,0.85,1.3,1.26,2.2,1.18 c0.36-0.03,0.7-0.13,1.02-0.29c0.3,0.53,0.68,1,1.12,1.41c-0.16,0.32-0.26,0.66-0.29,1.02c-0.08,0.9,0.33,1.78,1.18,2.2 c0.85,0.42,1.87,0.42,2.72,0c0.85-0.42,1.26-1.3,1.18-2.2c-0.03-0.36-0.13-0.7-0.29-1.02c0.53-0.3,1-0.68,1.41-1.12 c0.32,0.16,0.66,0.26,1.02,0.29c0.9,0.08,1.78-0.33,2.2-1.18c0.42-0.85,0.42-1.87,0-2.72c-0.42-0.85-1.3-1.26-2.2-1.18 c-0.36,0.03-0.7,0.13-1.02,0.29c-0.3-0.53-0.68-1-1.12-1.41c0.16-0.32,0.26-0.66,0.29-1.02C15.12,4.53,14.71,3.65,13.86,3.23z M12,10 c-1.1,0-2-0.9-2-2s0.9-2,2-2s2,0.9,2,2S13.1,10,12,10z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;

    /* 加一个可爱的旋转动画 */
    animation: spin 4s linear infinite;
  }

  /* 定义旋转动画 */
  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
</style>