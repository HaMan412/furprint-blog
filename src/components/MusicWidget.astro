---
// src/components/MusicWidget.astro
const { apiEndpoint } = Astro.props;
---
<div id="music-widget-container" class="text-sm mt-2" data-api-endpoint={apiEndpoint}>
  <div id="music-widget-content">
    <p>正在加载音乐信息...</p>
  </div>
</div>

<script is:inline>
  function musicWidgetScript() {
    // ▼▼▼ 核心修改 1：将 widgetContainer 的查找移到 fetch 函数内部 ▼▼▼
    // const widgetContainer = document.querySelector('#music-widget-container');
    // if (!widgetContainer) return;

    function updateMusicWidget(data, musicContainer) { // 接收 musicContainer 作为参数
      if (!musicContainer) return;

      if (data && data.playing && typeof data.song === 'string' && data.song.trim() !== '') {
        const parts = data.song.split(' - ');
        const name = parts[0] || '未知歌曲';
        const artist = parts.slice(1).join(' - ') || '未知艺术家';
        const CUSTOM_ICON_URL = "https://vip.123pan.cn/1815727707/yk6baz03t0l000d7w33fsavgcc6j1mkoDIYPAIUvAwUOAvxvAdrxAa==.png";

        musicContainer.innerHTML = `
          <div class="flex items-center gap-3 overflow-hidden">
            <img src="${CUSTOM_ICON_URL}" alt="Music Icon" class="flex-shrink-0 w-8 h-8 rounded-md shadow object-cover">
            <div class="overflow-hidden">
              <p class="font-semibold text-base text-base-content truncate" title="${name}">${name}</p>
              <p class="text-xs text-base-content/70 truncate" title="${artist}">${artist}</p>
            </div>
          </div>
        `;
      } else {
        musicContainer.innerHTML = '<p>当前没有在听歌</p>';
      }
    }

    async function fetchMusicData() {
      // ▼▼▼ 核心修改 2：在每次 fetch 时都重新获取最新的 DOM 元素 ▼▼▼
      const widgetContainer = document.querySelector('#music-widget-container');
      if (!widgetContainer) return;
      const musicContentContainer = widgetContainer.querySelector('#music-widget-content');
      if (!musicContentContainer) return;

      // 显示加载状态
      musicContentContainer.innerHTML = '<p>正在加载音乐信息...</p>';

      const apiEndpoint = widgetContainer.dataset.apiEndpoint;
      if (!apiEndpoint) return;
      try {
        const response = await fetch(apiEndpoint);
        const data = await response.json();
        updateMusicWidget(data, musicContentContainer); // 将容器传给更新函数
      } catch (error) {
        console.error('Failed to fetch music data:', error);
        if (musicContentContainer) musicContentContainer.innerHTML = '<p class="text-error">获取音乐信息失败</p>';
      }
    }
    
    document.addEventListener('astro:page-load', fetchMusicData);
    document.addEventListener('refresh-widgets', fetchMusicData);
  }
  musicWidgetScript();
</script>
