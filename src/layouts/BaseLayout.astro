---
import SteamWidget from '../components/SteamWidget.astro'; 
import MusicWidget from '../components/MusicWidget.astro';
import { SITE_TAB, SITE_DESCRIPTION, SITE_FAVICON, SITE_LANGUAGE, SITE_THEME } from "@config";
import { ClientRouter } from "astro:transitions";
import ElementCrossing from "astro-vtbot/components/ElementCrossing.astro";
import PointerOnNavigation from "astro-vtbot/components/PointerOnNavigation.astro";
import Header from "@components/Header.astro";
import Sidebar from "@components/Sidebar.astro";
import Footer from "@components/Footer.astro";
import Navbar from "@components/Navbar.astro";
import MobileTOC from "@components/widgets/MobileTOC.astro";

const { title, image, headings = [], showTOC = false } = Astro.props;
---

<!doctype html>
<html lang={SITE_LANGUAGE} class="bg-base-300" data-theme={SITE_THEME.light} data-theme-type="light">
  <head>
    <ClientRouter />
    <ElementCrossing />
    <PointerOnNavigation />
    <Header description={SITE_DESCRIPTION} favicon={SITE_FAVICON} image={image} />
    <title>{`${title} - ${SITE_TAB}`}</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/plyr-react/dist/plyr.css" />
    <script define:vars={{ SITE_THEME }} is:inline>
      (function () {
        const storedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        let theme;
        if (storedTheme) {
          theme = storedTheme;
        } else {
          theme = prefersDark ? SITE_THEME.dark : SITE_THEME.light;
          localStorage.setItem("theme", theme);
        }
        document.documentElement.setAttribute("data-theme", theme);
        const themeType = theme === SITE_THEME.dark ? "dark" : "light";
        document.documentElement.setAttribute("data-theme-type", themeType);
        window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
          if (!localStorage.getItem("theme")) {
            const newTheme = e.matches ? SITE_THEME.dark : SITE_THEME.light;
            document.documentElement.setAttribute("data-theme", newTheme);
            const newThemeType = e.matches ? "dark" : "light";
            document.documentElement.setAttribute("data-theme-type", newThemeType);
            localStorage.setItem("theme", newTheme);
          }
        });
      })();
    </script>
  </head>
  <body>
    <Navbar />
    <div class="max-w-6xl mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-5 lg:grid-cols-4 gap-4 p-4">
        <main class="col-span-1 md:col-span-4 lg:col-span-3 bg-transparent order-1 md:order-2 mt-16 md:mt-0">
          <div class="flex flex-col gap-4">
            <slot />
            <Footer />
          </div>
        </main>
        
        <aside class="col-span-1 bg-transparent order-2 md:order-1 md:top-4">
          <div class="sticky top-4 flex flex-col gap-2">
            <div class="bg-base-100/70 backdrop-blur-xl rounded-2xl shadow-lg overflow-hidden">
              <Sidebar headings={headings} showTOC={showTOC} />
            </div>
            
            <div class="bg-base-100/70 backdrop-blur-xl rounded-2xl shadow-lg overflow-hidden p-4 relative">
              <button id="widget-refresh-button" aria-label="刷新小组件" class="absolute top-3 right-3 p-1 rounded-full text-base-content/50 hover:bg-base-content/10 transition-colors duration-200 focus:outline-none">
                <svg id="widget-refresh-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M21.5 2v6h-6M2.5 22v-6h6M2 11.5a10 10 0 0 1 18.8-4.3M22 12.5a10 10 0 0 1-18.8 4.3"/>
                </svg>
              </button>

              <SteamWidget />
              <MusicWidget />
              <slot name="sidebar" />
            </div>

          </div>
        </aside>

      </div>
    </div>
    <MobileTOC headings={headings} showTOC={showTOC} />

    <script>
      document.addEventListener('astro:page-load', () => {
        const refreshButton = document.getElementById('widget-refresh-button');
        const refreshIcon = document.getElementById('widget-refresh-icon');

        if (refreshButton && refreshIcon) {
          refreshButton.addEventListener('click', () => {
            // 如果已经在旋转，则不执行任何操作，防止重复点击
            if (refreshIcon.classList.contains('animate-spin')) {
              return;
            }
            
            // 添加旋转动画
            refreshIcon.classList.add('animate-spin');
            
            // 发送一个全局的“刷新”信号
            document.dispatchEvent(new CustomEvent('refresh-widgets'));

            // 1.5秒后无论如何都移除动画，防止出错卡住
            setTimeout(() => {
              refreshIcon.classList.remove('animate-spin');
            }, 1500);
          });
        }
      });
    </script>
  </body>
</html>
