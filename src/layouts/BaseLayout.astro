---
import SteamWidget from '../components/SteamWidget.astro'; 
import MusicWidget from '../components/MusicWidget.astro';
import { SITE_TAB, SITE_DESCRIPTION, SITE_FAVICON, SITE_LANGUAGE, SITE_THEME } from "@config";
import { ClientRouter } from "astro:transitions";
import ElementCrossing from "astro-vtbot/components/ElementCrossing.astro";
import PointerOnNavigation from "astro-vtbot/components/PointerOnNavigation.astro";
import Header from "@components/Header.astro";
import Sidebar from "@components/Sidebar.astro";
import Footer from "@components/Footer.astro";
import Navbar from "@components/Navbar.astro";
import MobileTOC from "@components/widgets/MobileTOC.astro";

const { title, image, headings = [], showTOC = false } = Astro.props;
---

<!doctype html>
<html lang={SITE_LANGUAGE} class="bg-base-300" data-theme={SITE_THEME.light} data-theme-type="light">
  <head>
    <ClientRouter />
    <ElementCrossing />
    <PointerOnNavigation />
    <Header description={SITE_DESCRIPTION} favicon={SITE_FAVICON} image={image} />
    <title>{`${title} - ${SITE_TAB}`}</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/plyr-react/dist/plyr.css" />
    
    <!-- ▼▼▼ 核心修改：重构主题设置脚本以适应视图过渡 ▼▼▼ -->
    <script define:vars={{ SITE_THEME }} is:inline>
      // 1. 将主题设置逻辑封装成一个可复用的函数
      function applyTheme() {
        const storedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        let theme;

        if (storedTheme) {
          theme = storedTheme;
        } else {
          // 如果没有存储的主题，则根据系统偏好设置
          theme = prefersDark ? SITE_THEME.dark : SITE_THEME.light;
        }
        
        document.documentElement.setAttribute("data-theme", theme);
        const themeType = theme === SITE_THEME.dark ? "dark" : "light";
        document.documentElement.setAttribute("data-theme-type", themeType);
      }

      // 2. 页面首次加载时立即应用主题
      applyTheme();

      // 3. 在每次视图过渡完成后，再次应用主题
      document.addEventListener("astro:after-swap", applyTheme);

      // 4. 监听系统主题变化（这个逻辑可以保持）
      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
        if (!localStorage.getItem("theme")) { // 仅当用户未手动设置时才跟随系统
          const newTheme = e.matches ? SITE_THEME.dark : SITE_THEME.light;
          document.documentElement.setAttribute("data-theme", newTheme);
          const newThemeType = e.matches ? "dark" : "light";
          document.documentElement.setAttribute("data-theme-type", newThemeType);
        }
      });
    </script>

    <style is:global>
      #steam-widget-content .text-base.text-base-content.truncate {
        font-weight: 600;
      }
      #music-widget-content .font-semibold.text-base {
        font-size: 0.875rem;
        line-height: 1.25rem;
      }
      #music-widget-content .text-xs.text-base-content\/70 {
        font-size: 0.875rem;
        line-height: 1.25rem;
      }
    </style>

  </head>
  <body data-steam-api-endpoint="https://steam.furprint.cn/api/steam/recent">
    <Navbar />
    <div class="max-w-[1400px] mx-auto">
      <div class="grid grid-cols-1 md:grid-cols-4 lg:grid-cols-11 gap-4 p-4">
        
        <main class="col-span-1 md:col-span-3 lg:col-span-7 bg-transparent order-1 md:order-2 mt-16 md:mt-0">
          <div class="flex flex-col gap-4">
            <slot />
            <Footer />
          </div>
        </main>
        
        <aside class="col-span-1 md:col-span-1 lg:col-span-2 bg-transparent order-2 md:order-1 md-top-4">
          <div class="sticky top-4 flex flex-col gap-2">
            <div class="bg-base-100/70 backdrop-blur-xl rounded-2xl shadow-lg overflow-hidden">
              <Sidebar headings={headings} showTOC={showTOC} />
            </div>
          </div>
        </aside>

        <aside class="hidden lg:block lg:col-span-2 bg-transparent order-3">
          <div class="sticky top-4 flex flex-col gap-2">
            <div class="bg-base-100/70 backdrop-blur-xl rounded-2xl shadow-lg overflow-hidden p-4 relative">
              
              <div class="flex justify-between items-center mb-2">
                <h2 class="text-lg font-bold">哈曼最近玩的游戏</h2>
                <div id="widget-refresh-button" class="cursor-pointer text-base-content/60 hover:text-base-content">
                  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 12a9 9 0 0 1 9-9 9.75 9.75 0 0 1 6.74 2.74L21 8"/><path d="M21 3v5h-5"/><path d="M21 12a9 9 0 0 1-9 9 9.75 9.75 0 0 1-6.74-2.74L3 16"/><path d="M3 21v-5h5"/></svg>
                </div>
              </div>
              
              <SteamWidget />
              
              <h2 class="text-lg font-bold mt-2">哈曼正在听的歌</h2>
              <MusicWidget apiEndpoint="https://music.furprint.cn" />
              
              <slot name="sidebar" />
            </div>
          </div>
        </aside>

      </div>
    </div>
    <MobileTOC headings={headings} showTOC={showTOC} />

    <script is:inline>
      document.addEventListener('astro:page-load', () => {
        const refreshButton = document.getElementById('widget-refresh-button');
        if (!refreshButton) return;
        const svg = refreshButton.querySelector('svg');
        refreshButton.addEventListener('click', () => {
          if (svg && !svg.classList.contains('animate-spin')) {
            svg.classList.add('animate-spin');
            document.dispatchEvent(new CustomEvent('refresh-widgets'));
            setTimeout(() => {
              svg.classList.remove('animate-spin');
            }, 1500);
          }
        });
      });
    </script>
  </body>
</html>
